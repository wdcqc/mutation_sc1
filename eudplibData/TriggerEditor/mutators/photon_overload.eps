import PluginVariables as msqcvar;
import utils;

function init() {
	DoActions(
		// unit 189
		SetMemoryX(6698868, SetTo, 20480, 65280),
		SetMemoryX(6690716, SetTo, 20736, 65280),
		SetMemoryX(6696564, SetTo, 1792, 65280),
		SetMemoryX(6697716, SetTo, 1792, 65280),
		SetMemory(6701940, SetTo, 1409318913),
		SetMemoryX(6702516, SetTo, 15360, 65280),
		SetMemory(6692272, SetTo, 1048596),
		SetMemory(6692276, SetTo, 1048596),
		SetMemory(6695764, SetTo, 65537),
		SetMemoryX(6699100, SetTo, 1024, 65280),
		SetMemoryX(6693668, SetTo, 4608, 65280),
		SetMemoryX(6696796, SetTo, 4608, 65280),
		SetMemoryX(6703444, SetTo, 4608, 65280),
		SetMemoryX(6697948, SetTo, 4864, 65280),
		SetMemoryX(6699788, SetTo, 5888, 65280),
		SetMemoryX(6693204, SetTo, 768, 65280)
		
		// weapons 80, 81
		//SetMemory(6649624, SetTo, 327685)
	);
}

const check_deaths = EUDArray(12);

function loop8_normal() {
	for(var player = 0; player < 6; player++) {
		if(check_deaths[player] == 2) {
			SetDeaths(player, Subtract, 1, "(buildings)");
		}
		if(Deaths(player, AtLeast, 1, "(buildings)")) {
			check_deaths[player] = 1;
		}
		else {
			check_deaths[player] = 0;
		}
	}
}

function loop8_player(epd, player) {
	const cm = EPDCUnitMap(epd);
	if(cm.unitType == 189) {
		if(check_deaths[player] > 0) {
			setloc_epd($L("shared"), epd + 40 / 4);
			RemoveUnitAt(1, "Map Revealer", $L("shared"), P9);
			if(Bring(player, AtMost, 0, "(buildings)", "shared")) {
				cm.die();
				check_deaths[player] = 2;
			}
		}
	}
	else if(cm.unitType >= 106 && cm.unitType <= 201 && cm.unitType != 162 && (cm.orderID == 23 || cm.orderID == 156)) {
		if(MemoryXEPD(epd + 140 / 4, Exactly, 0, 0xFFFF0000)
		&&MemoryXEPD(epd + 172 / 4, Exactly, 0, 0x0000FFFF) ) {
			setloc_epd($L("shared"), epd + 40 / 4);
			dilateloc($L("shared"), 256, 256);
			RemoveUnitAt(1, "Map Revealer", $L("shared"), P9);
			
			if((player < 3 && Bring(Force2, AtLeast, 1, "(men)", "shared")) || (player >= 3 && Bring(Force1, AtLeast, 1, "(men)", "shared"))) {
				var newunit_epd = epdread_epd(EPD(0x00628438));
				if(newunit_epd > 0 && newunit_epd < 180000) {
					SetMemoryXEPD(epd + 140 / 4, SetTo, 1 * 65536, 0xFFFF0000);
					if(MemoryXEPD(EPD(0x662860) + cm.unitType, Exactly, 0x00200000, 0x00200000)) {
						SetMemoryXEPD(EPD(0x662B54), SetTo, 0x00200000, 0xFFFF0000);
					}
					else {
						SetMemoryXEPD(EPD(0x662B54), SetTo, 0x00000000, 0xFFFF0000);
					}
					if(MemoryXEPD(EPD(0x662860) + cm.unitType, Exactly, 0x00000020, 0x00000020)) {
						SetMemoryXEPD(EPD(0x662B54), SetTo, 0x00000020, 0x0000FFFF);
					}
					else {
						SetMemoryXEPD(EPD(0x662B54), SetTo, 0x00000000, 0x0000FFFF);
					}
					setloc_epd($L("shared"), epd + 40 / 4);
					CreateUnitWithProperties(1, 189, $L("shared"), player, UnitProperty(invincible=True));
				}
			}
		}
	}
}